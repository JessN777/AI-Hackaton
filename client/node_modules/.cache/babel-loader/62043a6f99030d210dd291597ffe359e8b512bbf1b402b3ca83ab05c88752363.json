{"ast":null,"code":"var _jsxFileName = \"/Users/james.shi/Desktop/AI-Hackaton/client/src/ManualForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Paper, TextField, Button } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManualForm = () => {\n  _s();\n  const axiosInstance = axios.create({\n    baseURL: \"localhost:5000\"\n  });\n  const [formValues, setFormValues] = useState({});\n  const handleFormChange = event => {\n    setFormValues({\n      ...formValues,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleFormSubmit = () => {\n    const prompt = `You are an interviewer named 'InterviewBot' interviewing an applicant applying for a company similar to ${formValues.companyName}. Through your questions you want to assess whether the candidate possess ${formValues.companyValues} and is suitable for a ${formValues.companyPosition} position at ${formValues.companyName}. \n    You: Thank you for taking the time to interview me, InterviewBot!\"`;\n    axios.post(\"/create_question\", {\n      prompt: prompt\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n    setFormValues({});\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      padding: 20\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Company Name\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        name: \"companyName\",\n        value: formValues.companyName || \"\",\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Interview Position\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        name: \"companyPosition\",\n        value: formValues.companyPosition || \"\",\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Company Values\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        value: formValues.companyValues || \"\",\n        name: \"companyValues\",\n        onChange: handleFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleFormSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ManualForm, \"HaAN28vQIwcytciUCVbzfu1nIYg=\");\n_c = ManualForm;\nexport default ManualForm;\nvar _c;\n$RefreshReg$(_c, \"ManualForm\");","map":{"version":3,"names":["React","useState","Paper","TextField","Button","axios","ManualForm","axiosInstance","create","baseURL","formValues","setFormValues","handleFormChange","event","target","name","value","handleFormSubmit","prompt","companyName","companyValues","companyPosition","post","then","response","console","log","catch","error","display","justifyContent","padding","flexDirection"],"sources":["/Users/james.shi/Desktop/AI-Hackaton/client/src/ManualForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Paper, TextField, Button } from \"@mui/material\";\nimport axios from \"axios\";\n\nconst ManualForm = () => {\n  const axiosInstance = axios.create({\n    baseURL: \"localhost:5000\",\n  });\n\n  const [formValues, setFormValues] = useState({});\n\n  const handleFormChange = (event) => {\n    setFormValues({\n      ...formValues,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleFormSubmit = () => {\n    const prompt = `You are an interviewer named 'InterviewBot' interviewing an applicant applying for a company similar to ${formValues.companyName}. Through your questions you want to assess whether the candidate possess ${formValues.companyValues} and is suitable for a ${formValues.companyPosition} position at ${formValues.companyName}. \n    You: Thank you for taking the time to interview me, InterviewBot!\"`;\n    axios\n      .post(\"/create_question\", {\n        prompt: prompt,\n      })\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    setFormValues({});\n  };\n  return (\n    <Paper style={{ display: \"flex\", justifyContent: \"center\", padding: 20 }}>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <TextField\n          label=\"Company Name\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          name=\"companyName\"\n          value={formValues.companyName || \"\"}\n          onChange={handleFormChange}\n        />\n        <TextField\n          label=\"Interview Position\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          name=\"companyPosition\"\n          value={formValues.companyPosition || \"\"}\n          onChange={handleFormChange}\n        />\n        <TextField\n          label=\"Company Values\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={formValues.companyValues || \"\"}\n          name=\"companyValues\"\n          onChange={handleFormChange}\n        />\n        <Button variant=\"contained\" color=\"primary\" onClick={handleFormSubmit}>\n          Submit\n        </Button>\n      </div>\n    </Paper>\n  );\n};\n\nexport default ManualForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACxD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;IACjCC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEhD,MAAMW,gBAAgB,GAAIC,KAAK,IAAK;IAClCF,aAAa,CAAC;MACZ,GAAGD,UAAU;MACb,CAACG,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IACpC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAM;IAC7B,MAAMC,MAAM,GAAI,2GAA0GR,UAAU,CAACS,WAAY,6EAA4ET,UAAU,CAACU,aAAc,0BAAyBV,UAAU,CAACW,eAAgB,gBAAeX,UAAU,CAACS,WAAY;AACpV,uEAAuE;IACnEd,KAAK,CACFiB,IAAI,CAAC,kBAAkB,EAAE;MACxBJ,MAAM,EAAEA;IACV,CAAC,CAAC,CACDK,IAAI,CAAEC,QAAQ,IAAK;MAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CAAC;IACJjB,aAAa,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC;EACD,oBACE,QAAC,KAAK;IAAC,KAAK,EAAE;MAAEkB,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAA,uBACvE;MAAK,KAAK,EAAE;QAAEF,OAAO,EAAE,MAAM;QAAEG,aAAa,EAAE;MAAS,CAAE;MAAA,wBACvD,QAAC,SAAS;QACR,KAAK,EAAC,cAAc;QACpB,OAAO,EAAC,UAAU;QAClB,MAAM,EAAC,QAAQ;QACf,IAAI,EAAC,aAAa;QAClB,KAAK,EAAEtB,UAAU,CAACS,WAAW,IAAI,EAAG;QACpC,QAAQ,EAAEP;MAAiB;QAAA;QAAA;QAAA;MAAA,QAC3B,eACF,QAAC,SAAS;QACR,KAAK,EAAC,oBAAoB;QAC1B,OAAO,EAAC,UAAU;QAClB,MAAM,EAAC,QAAQ;QACf,IAAI,EAAC,iBAAiB;QACtB,KAAK,EAAEF,UAAU,CAACW,eAAe,IAAI,EAAG;QACxC,QAAQ,EAAET;MAAiB;QAAA;QAAA;QAAA;MAAA,QAC3B,eACF,QAAC,SAAS;QACR,KAAK,EAAC,gBAAgB;QACtB,OAAO,EAAC,UAAU;QAClB,MAAM,EAAC,QAAQ;QACf,KAAK,EAAEF,UAAU,CAACU,aAAa,IAAI,EAAG;QACtC,IAAI,EAAC,eAAe;QACpB,QAAQ,EAAER;MAAiB;QAAA;QAAA;QAAA;MAAA,QAC3B,eACF,QAAC,MAAM;QAAC,OAAO,EAAC,WAAW;QAAC,KAAK,EAAC,SAAS;QAAC,OAAO,EAAEK,gBAAiB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE7D;IAAA;MAAA;MAAA;MAAA;IAAA;EACL;IAAA;IAAA;IAAA;EAAA,QACA;AAEZ,CAAC;AAAC,GA9DIX,UAAU;AAAA,KAAVA,UAAU;AAgEhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}